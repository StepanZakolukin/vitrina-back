name: Deploy to Stage

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version to deploy"
        required: true

jobs:
  test:
    uses: ./.github/workflows/tests.yml
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup SSH key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY_STAGE }}

      - name: Add server to known_hosts
        run: ssh-keyscan -H ${{ vars.SERVER_IP_STAGE }} >> ~/.ssh/known_hosts

      - name: Deploy to Stage via SSH
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ vars.SERVER_IP_STAGE }}
          username: ${{ secrets.USER_STAGE }}
          key: ${{ secrets.SSH_PRIVATE_KEY_STAGE }}
          port: 22
          script: |
            cd /home/ubuntu/vitrina-back

            # Создание .env.stage с подстановкой параметров
            cat <<EOF > .env.stage
            ENV_NAME=stage
            VERSION=${{ github.event.inputs.version }}
            CR_ID=${{ vars.CR_ID }}
            APP_PORT=5002

            DB_PORT=5433
            POSTGRES_DB=${{ secrets.POSTGRES_DB_STAGE }}
            POSTGRES_USER=${{ secrets.POSTGRES_USER_STAGE }}
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD_STAGE }}
            DATABASE_URL=Host=db;Port=5433;Database=${{ secrets.POSTGRES_DB_STAGE }};Username=${{ secrets.POSTGRES_USER_STAGE }};Password=${{ secrets.POSTGRES_PASSWORD_STAGE }}

            YANDEX_S3_ACCESS_KEY=${{ secrets.YANDEX_S3_ACCESS_KEY }}
            YANDEX_S3_SECRET_KEY=${{ secrets.YANDEX_S3_SECRET_KEY }}
            YANDEX_S3_BUCKET_NAME=${{ secrets.YANDEX_S3_BUCKET_NAME }}

            JWT_SECRET=${{ secrets.JWT_SECRET_STAGE }}
            EOF

            # Обновление сервиса
            docker-compose --env-file .env.prod pull app
            docker-compose --env-file .env.prod up -d app

            # Очистка неиспользуемых образов
            docker image prune -af
